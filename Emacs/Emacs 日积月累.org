#+TITLE:Emacs 日积月累
- =M-x= add-dir-local-variable :: add .dir-locals.el file
* Dired
** Marks & Flags
dired 最方便的一点就是可以对许多文件进行标记，并进行批量操作，常用的Flags有 =D 和
=*= ，其中 =D= 用来标记那些要删除的文件（夹）， =*= 用来标记进行其它操作，比如移动。
Mark的方法有很多，下面就一些常用的Mark 方法做一个总结：
1. Flag为 =D= 的标记指令的按键
   | 按键             | 执行的操作                                | 说明                                                       |
   |------------------+-------------------------------------------+------------------------------------------------------------|
   | d                | 将当前文件（夹）标记为 D                  | 如果有前缀数字n，那么会从当前文件一直到下面n个文件全被标记 |
   | #                | 将所有自动保存的文件标记为 D              |                                                            |
   | ~                | 将所有备份文件标记为D                     |                                                            |
   | % &              | 将所有垃圾文件标记为D                     |                                                            |
   | % d regexp <ret> | 输入自己的正则表达式，匹配到的文件标记为d |                                                            |
2. Flag为 =*= 的标记指令的按键
   | 按键             | 执行的操作                             | 说明                                                       |
   |------------------+----------------------------------------+------------------------------------------------------------|
   | * m (m)          | 标记当前文件（夹）为*                  | 如果有前缀数字n，那么会从当前文件一直到下面n个文件全被标记 |
   | * *              | 标记所有可执行文件                     |                                                            |
   | * @              | 标记所有符号链接                       |                                                            |
   | * /              | 标记所有目录                           |                                                            |
   | * s              | 标记所有文件                           |                                                            |
   | * .              | 标记所有给定扩展名的文件               |                                                            |
   | % m regexp <RET> | 标记所有匹配到给定的正则表达式的文件   | 与% d regexp 类似，只不过Flag 不一样                       |
   | * % REGEXP <RET> | 同上                                   | 同上                                                       |
   | % g regexp <RET> | 所有 *内容* 匹配到给定的正则表达式的文件 |                                                            |
3. 一些其它操作
   | 按键                          | 执行的操作                             | 说明                                                      |
   |-------------------------------+----------------------------------------+-----------------------------------------------------------|
   | u                             | 去除当前文件的标记                     |                                                           |
   | U (% !)                       | 去除所有文件的标记                     |                                                           |
   | <DEL>                         | 去除上一个文件的标记                   |                                                           |
   | * ？ markchar                 | 去除所有以markchar标记的文件的标记     |                                                           |
   | M-<DEL>                       | 同上                                   |                                                           |
   | t (* t)                       | 所有文件交换标记                       | 所有*变为未标记，所有未标记变为* ，此命令对其它Flag无影响 |
   | * c old-markchar new-markchar | 把所有的old-markchar替换为new-markchar | 这是创建或使用除D和*以外的标记符号的最主要方法            |
   | M-{                           | 转到上一个标记位置                     |                                                           |
   | M-}                           | 转到下一个标记位置                     |                                                           |
   | C-/ (C-_)                     | undo changes in dired buffer           |                                                           |
   |-------------------------------+----------------------------------------+-----------------------------------------------------------|
   | M-(                           | 查看 C-h f dired-mark-sexp             |                                                           |
** Operating on files
   dired 内建了很多文件操作，对于操作的文件有一个统一的约定，按照顺序是：

   - 如果你通过 C-u 传递一个前缀参数 N ，那么它对从当前行开始的 N 行执行操作( N 也可以是负数)。
   - 如果有被标记为 * 的文件，则以这些文件为操作对象。
   - 只对当前光标所在的文件进行操作。
***  常用操作
这些命令全部绑定到大写字母上，记忆也非常方便：

- C 拷贝文件。把 dired-recursive-copies 设为非 nil 的值可以递归拷贝目 录，通常我
  们设定为 top ，这表示对于顶层目录 dired 会先进行询问是否 要递归拷贝，而其中的
  子目录则不再询问。如果嫌询问太麻烦，可以直接设 置为 always 。
- D 删除文件。类似的有一个 dired-recursive-deletes 变量可以控制递归删 除。
- R 重命名文件，也就是移动文件。
- H 创建硬链接。
- S 创建软链接。
- M 修改权限位，即 shell 里面的 chmod 命令。
- G 修改文件所属的组。
- O 修改文件的所有者。
- T 修改文件的修改时间，类似于 shell 命令 touch 。
- P 打印文件。
- Z 压缩或解压文件。
- L 把 Elisp 文件加载进 Emacs 。
- B 对 Elisp 文件进行 Byte compile 。
- A 对文件内容进行正则表达式搜索，搜索会在第一个匹配的地方停下，然后 可以使用 M-, 搜索下一个匹配。
- Q 对文件内容进行交互式的正则表达式替换。
*** shell 命令
除了这些操作，还可以使用 ! 来执行 shell 命令。这里介绍了自动猜测 shell 命令的办法，就类似于通常的文件管理器里面以关联的程序打开了。
*** 在Dired中转换问文件名
dired 有一个文件名转换的理念，所以转换，并不一定是重命名，还可以是复制 和创建链接。所以，除了 % u 和 % l 重命名原文件为大写、小写外，一个使用 正则表达式进行转换的命令提供了四个选项： % X 其中 X 可以是 R , C , H 和 S ，分别代表重命名、复制、创建硬链接和创建软链接，他们使用匹配和替换的 机制，这有点像 rename 这个程序，例如： % R \.[^.]*$ <RET> .1\& <RET> 给原来的文件名加个标号 1 ，把 foo.txt 变成 foo.1.txt 。
另外，dired 还有一个叫做 Wdired 的扩展可以直接在 dired 的 buffer 里面编 辑文件名来达到重命名的效果。使用 M-x wdired-change-to-wdired-mode 进入 编辑模式，这个时候可以直接像编辑普通文本一样编辑文件名，还可以添加路径 来实现把文件移动到其他目录。除了文件名可以编辑以外，其他部分被标记为只 读，但是如果把 wdired-allow-to-change-permissions 设为 t 的话，还可以 编辑文件的权限位。编辑完成之后使用 C-c C-c 来应用所做的编辑。非常方便。

https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html
https://www.emacswiki.org/emacs/DiredMode
http://lifegoo.pluskid.org/wiki/EmacsAsFileManger.html
** Subdirectory
Dired 可以在同一个buffer 中显示一个文件夹及其子文件夹的内容
| 按键        | 操作                                                             | 说明                  |
|-------------+------------------------------------------------------------------+-----------------------|
| i           | 在buffer 的最后插入子文件夹的内容                                |                       |
| C-u C-<SPC> | 返回你在buffer 中的上一个位置                                    |                       |
| l           | 更新子文件夹中的内容                                             |                       |
| C-u k       | 移除子文件夹                                                     | 在headline 上才有作用 |
| $           | 显示或隐藏当前子文件夹                                           |                       |
| M-$         | 显示或隐藏当前buffer中所有子文件夹                               |                       |
|-------------+------------------------------------------------------------------+-----------------------|
| C-M-n       | 跳到下一个子文件夹的headline                                     |                       |
| C-M-p       | 跳到上一个子文件夹的headlineB                                    |                       |
| C-M-u       | 返回到上一级目录                                                 |                       |
| <           | Move up to the previous directory-file line (dired-prev-dirline) |                       |
| >           | Move down to the next directory-file line (dired-next-dirline).  |                       |
|-------------+------------------------------------------------------------------+-----------------------|
| C-u i       | 在插入子目录时可以向ls 传递参数                                  |                       |
| C-u l       | 改变当前子目录的参数                                             |                       |
** Dired and find
我们还可以在Dried 中查找文件名和文件内容，分别使用 =find-dired= 和 =find-grep= 命令，这两个命令其实都跟 /find/ 命令有关,可以参考下面两个链接
https://www.binarytides.com/linux-find-command-examples/
https://www.lifewire.com/uses-of-linux-command-find-2201100
** WDired
在这个mode 下，可以将Dired buffer 转变为可直接编辑的状态，按键是 =C-x C-q (dired-toggle-read-only)=,
https://www.gnu.org/software/emacs/manual/html_node/emacs/Wdired.html#Wdired
** Misc
Dired 还提供了一些其它功能：
- +: 新建一个文件夹
- w: 复制当前或标记为*的文件（夹）的名字，加前缀 =C-u 0= 可以复制其绝对路径
- W: 以系统默认的程序打开文件
- Y: 为所标记的文件创建到指定目录的相对符号链接，即使用相对路径进行使用，而不是绝对路径
* Edit
** 移动
负责鼠标移动，可以移动到某一行和某个字符处。
| 按键  | 效果                           |
|-------+--------------------------------|
| C-:   |                                |
| C-'   | 跳转到某个指定位置             |
| M-g f | 跳转到某一行                   |
|-------+--------------------------------|
| M-z   |                                |
| M-Z   | 删除当前位置到指定位置间的内容 |


** iedit
| 按键    | 效果                             |
|---------+----------------------------------|
| C-;     | 高亮显示所有与当前字符一样的字符 |
| M-;     | 从匹配的字符中去除               |
| C-'     | 显示/隐藏未匹配的行              |
| <tab>   | 下一个                           |
| <S-tab> | 上一个                           |
| M-I     | 把搜索区域限定到当前行           |
| M-{     | 搜索区域向上扩展一行             |
| M-}     | 搜索区域向下扩展一行             |

* multi-cursor
| 按键        | 效果             |
|-------------+------------------|
| C-S-c C-S-c | 开启mode         |
| C->         | 向下增加一个光标 |
| C-<         | 向下增加一个光标 |
| C-M->       | 跳过下一个       |
| C-M-<       | 跳过上一个     |
退出按C-g 或者 ENTER

** 其他
C-` origami

* GTD
