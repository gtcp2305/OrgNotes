#+INCLUDE: /home/ttt/.templates/NoteConfig.org
#+TITLE: C++ Standard Libarary
#+Author:
#+Email:
#+DATE:  2018-12-13

本文重点是C++标准库，分为顺序容器、泛型算法、关联容器、动态内存四个大部分。
* 顺序容器
顺序容器是指元素在容器中的位置与其加入容器的顺序相对应的容器。
#+CAPTION: 顺序容器类型
#+NAME: tab:seq_container
| 模板     | 名称         | 特性               | 说明                                               |
|----------+--------------+--------------------+----------------------------------------------------|
| =vector= | 可变大小数组 | 支持快速随机访问   | 元素连续存储，在尾部之外的位置添加或删除元素会很慢 |
| =array=  | 固定大小数组 | 支持快速随机访问   | 不能添加或删除元素                                 |
| =list=   | 双向链表     | 只支持双向顺序访问 | 元素存储不连续，在任何位置添加或删除元素都很快     |
| =deque=  | 双端队列     | 支持快速随机访问   | 在头尾位置添加删除元素很快                         |
** 容器库概览
容器类型上的操作形成了一种层次：
+ 某些操作是所有容器都提供的
+ 另外一些操作仅针对顺序容器、关联容器或无序容器
+ 还有一些操作只适用于一小部分容器
本小结主要介绍都所有容器都适用的操作，下一小节介绍顺序容器的操作，关联容器的操作将在下一节介绍。
*** 容器定义和初始化
容器适模板，需要在尖括号中填入元素的类型，对于 =array= 还要提供大小信息。
将一个容器初始化为另一个容器的拷贝有两种：
+ 拷贝整个容器 :: 这两个容器的类型及其元素的类型必须匹配
+ 拷贝一个由迭代器指定的范围 :: 两个容器的类型和元素的类型没要求，只要能将要拷贝的元素转换为要初始化的元素类型即可。
顺序容器（arrary 除外）还提供一个关联容器没有的构造函数，它接受一个容器的大小和一个可选的元素初始值，如果元素的类型具有
默认构造函数，可以只提供一个容器大小，如果元素类型没有默认构造函数，还需要再提供一个显式的元素初始值。
#+BEGIN_SRC C++ -n -r :exports both :results value verbatim
vector<int> vi(10);    //10个整型元素，默认初始化为0
vector<int> vi1(10,5); //10个整型元素，每个元素初始化为5
#+END_SRC
*** 迭代器

* 泛型算法
* 关联容器
* 动态内存
